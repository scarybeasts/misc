MODE7:VDU133,157,131:PRINT"Oiled Otter v0.1":PRINT
REM Machine code.
D%=&7200:Z%=&70
REM Output, track.
O%=&FF:T%=-1
REM Filesystem, drive.
F$="DISC":F%=0
REM Buffer.
B%=&4000

PROCsetup
PROCon:PROCseek0:PROCoff
PRINT"OK TRK0"

REPEAT

INPUT A$
IF A$="ON" THEN PROCon
IF A$="OFF" THEN PROCoff
IF A$="NUKE" THEN PROCnuke
IF A$="IN" THEN PROCstepin
IF A$="OUT" THEN PROCstepout
IF A$="0" THEN PROCseek0
IF A$="WDSK" THEN PROCwdsk:MODE7
IF A$="TFORM" THEN PROCtform:MODE7
IF A$="LONG" THEN PROClong:MODE7

UNTIL FALSE

DEF PROCsetup
REM User port
REM Output pins high
?&FE60=&FF
REM User port bits 0-5 output, 6-7 input.
?&FE62=&3F
ENDPROC

DEF PROCr(A%)
O%=O% AND NOT A%
?&FE60=O%
ENDPROC

DEF PROCs(A%)
O%=O% OR A%
?&FE60=O%
ENDPROC

DEF PROCon
IF (O% AND &03)=0 THEN ENDPROC
PROCr(&03)
PROCwait(100)
ENDPROC

DEF PROCoff
PROCs(&03)
ENDPROC

DEF PROCnuke
PROCon
PROCr(&04)
PROCwait(50)
PROCs(&04)
PROCoff
ENDPROC

DEF PROCstepin
PROCr(&08)
PROCr(&10)
PROCwait(1)
PROCs(&10)
PROCwait(1)
ENDPROC

DEF PROCstepout
PROCs(&08)
PROCr(&10)
PROCwait(1)
PROCs(&10)
PROCwait(1)
ENDPROC

DEF PROCseek0
IF FNtrk0 THEN ENDPROC
REPEAT
PROCstepout
UNTIL FNtrk0
T%=0
ENDPROC

DEF PROCfsys
OSCLI(F$)
IF F$="DISC" THEN OSCLI("DR."+STR$(F%))
ENDPROC

DEF PROCtform
PROCfsys
OSCLI("LOAD TFORM0 "+STR$~(B%))
PROCwbuf
ENDPROC

DEF PROClong
W%=B%
PROCwhdr(0):PROCwraw(&29,&C0,460)
PROCwhdr(1):PROCwrun(&FF,258)
PROCwbuf
ENDPROC

DEF PROCwhdr(A%)
PROCwrun(&FF,16):PROCwrun(&00,6)
PROCwraw(&29,&00,1):PROCwraw(&29,&20,1)
PROCwrun(&00,2):PROCwrun(A%,1):PROCwrun(&01,1)
IF A%=0 THEN PROCwrun(&F1,1):PROCwrun(&D3,1) ELSE PROCwrun(&C2,1):PROCwrun(&E2,1)
PROCwrun(&FF,16):PROCwrun(&00,6)
PROCwraw(&29,&00,1):PROCwraw(&29,&40,1)
ENDPROC

DEF PROCwrun(A%,X%)
J%=&2A00+(A% AND &F0)*2
K%=(J% AND &FF00) DIV 256
L%=&2A00+(A% AND &0F)*32
M%=(L% AND &FF00) DIV 256
FOR I%=1 TO X%:?W%=K%:?(W%+1)=J%:?(W%+2)=M%:?(W%+3)=L%:W%=W%+4:NEXT
ENDPROC

DEF PROCwraw(A%,X%,Y%)
FOR I%=1 TO Y%:?W%=A%:?(W%+1)=X%:W%=W%+2:NEXT
ENDPROC

DEF PROCwbuf
PROCon
PROCseek0
CLS
PROCgentab
PROCs16(Z%,B%)
CALL D%
REM Video state will have been messed up.
PROCoff
ENDPROC

DEF PROCwdsk
PROCfsys
PROCon
PROCseek0
CLS
PROCgentab
FOR T%=0 TO 40
I%=T% AND NOT 1
OSCLI("LOAD TRKS"+STR$(I%)+" 3000")
REM Fast copy 4000 to 3000.
IF (T% AND 1)=1 THEN PROCs16(Z%,&3000):PROCs16(Z%+2,&4000):PROCs16(Z%+4,-4096):CALL D%+3
REM TRKS to OTTER buffer.
PROCt2o
REM Write it.
PROCs16(Z%,B%):CALL D%
REM Seek.
PROCstepin
NEXT
ENDPROC

DEF PROCt2o
PROCs16(Z%,B%):PROCs16(Z%+2,&3000):CALL D%+6
ENDPROC

DEF FNtrk0
IF (?&FE60 AND &80)=&80 THEN =0 ELSE =1

DEF PROCwait(A%)
X%=TIME:REPEAT:UNTIL TIME>X%+A%+1
ENDPROC

DEF PROCs16(A%,X%):?A%=X%:?(A%+1)=(X% AND &FF00) DIV 256:ENDPROC

DEF PROCgentab
A%=&7E00
REM Data nibbles 0x0 to 0xF, all clock bits set.
FOR I%=0 TO 15
!A%=&FF:!(A%+4)=0:!(A%+8)=&FF:!(A%+12)=0
!(A%+16)=&FF:!(A%+20)=0:!(A%+24)=&FF:!(A%+28)=0
IF I% AND 8 THEN ?(A%+4)=&FF
IF I% AND 4 THEN ?(A%+12)=&FF
IF I% AND 2 THEN ?(A%+20)=&FF
IF I% AND 1 THEN ?(A%+28)=&FF
A%=A%+32
NEXT
REM Special clock bit combinations.
REM Clock &C, data &F
!&7D00=&FF:!&7D08=&FF:!&7D10=0:!&7D18=0
!&7D04=&FF:!&7D0C=&FF:!&7D14=&FF:!&7D1C=&FF
REM Clock &7, data &E
!&7D20=0:!&7D28=&FF:!&7D30=&FF:!&7D38=&FF
!&7D24=&FF:!&7D2C=&FF:!&7D34=&FF:!&7D3C=0
REM Clock &7, data &B
!&7D40=0:!&7D48=&FF:!&7D50=&FF:!&7D58=&FF
!&7D44=&FF:!&7D4C=0:!&7D54=&FF:!&7D5C=&FF
REM Clock &7, data &8
!&7D60=0:!&7D68=&FF:!&7D70=&FF:!&7D78=&FF
!&7D64=&FF:!&7D6C=0:!&7D74=0:!&7D7C=0
REM Weak bits
!&7D80=0:!&7D88=0:!&7D90=0:!&7D98=0
!&7D84=0:!&7D8C=0:!&7D94=0:!&7D9C=0
REM Long track, data &FF, 10 pulses (normally 8)
!&7DA0=&7F0000FF:!&7DA4=&E01F0080:!&7DA8=&00F00F00:!&7DAC=&0100FC03
!&7DB0=&7F0000FE:!&7DB4=&C03F0080:!&7DB8=&00F00F00:!&7DBC=&0000F807
REM Long track, data &FF, 9 pulses (normally 8)
!&7DC0=&0F0000FF:!&7DC4=&7F0000F0:!&7DC8=&F8070080:!&7DCC=&C03F0000
!&7DD0=&00FC0300:!&7DD4=&00E01F00:!&7DD8=&0000FE01:!&7DDC=&0000F00F
ENDPROC
